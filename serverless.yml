# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: smart-iot-app
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221

# you can overwrite defaults here
  stage: dev
  region: ap-southeast-1

# environment
  environment:
    FARM_TABLE: 
      Ref: FarmDynamoDbTable
    FARM_USER_TABLE:
      Ref: FarmUserDynamoDbTable
    FARM_DEVICE_TABLE:
      Ref: FarmDevicesDynamoDbTable


# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource:
            Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - "Ref" : "ServerlessDeploymentBucket"
                - "/*"
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource: 
            - "Fn::GetAtt": [FarmDynamoDbTable, Arn]
            - "Fn::GetAtt": [FarmUserDynamoDbTable, Arn]
            - "Fn::GetAtt": [FarmDevicesDynamoDbTable, Arn]

# you can add packaging information here
package:
  patterns:
    - '!**'
    - handler.js
    - node_modules/uuid
    - node_modules/bluebird

functions:
#  hello:
#    handler: handler.hello
  getFarmExample:
    handler: handler.getFarmExample
    events:
      - http:
          path: /farm/get/example
          method: GET
  getFarmList:
    handler: handler.getFarmList
    description: List all farms
    events:
      - http:
          path: /farm/list/all
          method: GET
  getFarmByID:
    handler: handler.getFarmByID
    description: Get a farm data by farm's ID
    events:
      - http:
          path: /farm/get/{ID}
          method: GET
  createFarm:
    handler: handler.createFarm
    description: Send a farm information
    events:
      - http:
          path: /farm/create
          method: POST
  createUser:
    handler: handler.createUser
    description: Send a user information with username and list of farms
    events:
      - http:
          path: /user/create
          method: POST
  getUserList:
    handler: handler.getUserList
    description: Return a list of users with id
    events:
      - http:
          path: /user/list/all
          method: GET

resources:
  Resources:
    FarmDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          # - AttributeName: Name
          #   AttributeType: S
          - AttributeName: "ID"
            AttributeType: "S"
          # - AttributeName: Owner
          #   AttributeType: S
          # - AtrributeName: AllowedUsers
          #   AttributeType: SS
          # - AttributeName: AvailableDevices
          #   AttributeType: SS
        KeySchema:
          # - AttributeName: Name
          #   KeyType: HASH
          - AttributeName: "ID"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: FarmDynamoDbTable
    FarmUserDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "ID"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "ID"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: FarmUserDynamoDbTable
    FarmDevicesDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "ID"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "ID"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: FarmDevicesDynamoDbTable
